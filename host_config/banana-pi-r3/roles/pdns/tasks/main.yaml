---
- name: Extracting network component from default_CIDR
  ansible.builtin.shell: |
    set -o pipefail
    echo "{{ default_CIDR }}" |  awk 'BEGIN { FS = "." } ; {print $1"."$2"."$3}'
  register: network_component
  changed_when: network_component.rc != 0

- name: Registering LAN ip address as bpi_lan_ip fact
  ansible.builtin.set_fact:
    bpi_lan_ip: "{{ network_component.stdout }}.{{ bpi_ip }}"
    bpi_network: "{{ network_component.stdout }}"
    cacheable: true

- name: Removing --guardian=no from /etc/init.d/pdns
  ansible.builtin.replace:
    path: /etc/init.d/pdns
    regexp: '--guardian=no'
    replace: ''

- name: Removing DB file
  ansible.builtin.file:
    path: "{{ pdns_db_path }}/pdns.sqlite3"
    state: absent
  when: pdns_remove_db == "true"

- name: Checking if the PowerDNS database already exists
  ansible.builtin.stat:
    path: "{{ pdns_db_path }}/pdns.sqlite3"
  register: powerdns_db

- name: Create a directory if it does not exist
  ansible.builtin.file:
    path: "{{ pdns_db_path }}"
    state: directory
    mode: '0755'

- name: Checking if the PowerDNS schema already exists
  ansible.builtin.stat:
    path: "{{ pdns_db_path }}/schema.sqlite3.sql"
  register: powerdns_schema
  when: powerdns_db.stat.exists is false

- name: Downloading schema for the PowerDNS SQLite database from GitHub
  ansible.builtin.get_url:
    url: "{{ pdns_schema_url }}"
    dest: "{{ pdns_db_path }}/schema.sqlite3.sql"
    mode: 600
  when: powerdns_schema.stat.exists is false

- name: Creating default PowerDNS database from schema
  ansible.builtin.shell: |
    sqlite3 "{{ pdns_db_path }}/pdns.sqlite3" < "{{ pdns_db_path }}/schema.sqlite3.sql"
    chown -R pdns:pdns "{{ pdns_db_path }}"
    exit 0
  when: powerdns_db.stat.exists is false
  register: my_output
  changed_when: my_output.rc != 0

- name: Removing the PowerDNS schema
  ansible.builtin.file:
    path: "{{ pdns_db_path }}/schema.sqlite3.sql"
    state: absent

- name: Configuring PowerDNS in /etc/powerdns/pdns.conf
  ansible.builtin.include_tasks: setup_pdns.yaml

- name: Configuring PowerDNS recursor /etc/powerdns/recursor.conf
  ansible.builtin.include_tasks: setup_recursor.yaml

- name: Adding zones and records ro PowerDNS
  ansible.builtin.include_tasks: create_records.yaml
