---
- name: Creating zone {{ default_domain }}
  ignore_errors: true
  ansible.builtin.command: " pdnsutil create-zone {{ default_domain }} ns1.{{ default_domain }}"
  register: pdnsutil_create_zone
  changed_when: pdnsutil_create_zone.rc != 0

- name: Creating entry for ns1.{{ default_domain }}
  ansible.builtin.command: "pdnsutil add-record {{ default_domain }} ns1 A {{ ansible_facts['bpi_network'] }}.{{ ns1 }}"
  register: pdnsutil_add_ns_a
  changed_when: pdnsutil_add_ns_a.rc == 0

- name: Increasing serial on {{ default_domain }}
  ansible.builtin.command: "pdnsutil increase-serial {{ default_domain }}"
  register: pdnsutil_increase_serial
  changed_when: pdnsutil_increase_serial.rc == 0

- name: Creating A records in {{ default_domain }}
  ansible.builtin.include_tasks: create_A_records.yaml
  loop: "{{ static_hosts | dict2items }}"

- name: Creating CNAME records in {{ default_domain }}
  ansible.builtin.include_tasks: create_CNAME_records.yaml
  loop: "{{ cnames | dict2items }}"

# in-addr.arpa
- name: Creating zone {{ in_addr_arpa }}
  ansible.builtin.command: " pdnsutil create-zone {{ in_addr_arpa }} ns1.{{ default_domain }}"
  register: pdnsutil_create_zone
  changed_when: pdnsutil_create_zone.rc == 0

- name: Creating PTR records in {{ in_addr_arpa }}
  ansible.builtin.include_tasks: create_PTR_records.yaml
  loop: "{{ static_hosts | dict2items }}"

# we need to reload PowerDNS after we created the records, otherwise it will not work.
- name: Reload PowerDNS service
  community.general.openwrt_init:
    name: pdns
    state: restarted

- name: Checking if PowerDNS works.
  ansible.builtin.debug:
  # yamllint disable-line rule:line-length
    msg: "Querying {{ bpi_network }}.{{ bpi_ip }} for IPv4 address for {{ bpi_hostname }}.{{ default_domain }} produces {{ lookup('community.general.dig', '{{ bpi_hostname }}.{{ default_domain }}', '@{{ bpi_network }}.{{ bpi_ip }}') }}"
