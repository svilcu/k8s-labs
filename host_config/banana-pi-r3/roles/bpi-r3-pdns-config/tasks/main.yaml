---
- name: Removing DB file
  ansible.builtin.file:
    path: "{{ pdns_db_path }}/pdns.sqlite3"
    state: absent
  when: pdns_remove_db == "true"

- name: Checking if the PowerDNS database already exists
  ansible.builtin.stat:
    path: "{{ pdns_db_path }}/pdns.sqlite3"
  register: powerdns_db

- name: Create a directory if it does not exist
  ansible.builtin.file:
    path: "{{ pdns_db_path }}"
    state: directory
    mode: '0755'

- name: Checking if the PowerDNS schema already exists
  ansible.builtin.stat:
    path: "{{ pdns_db_path }}/schema.sqlite3.sql"
  register: powerdns_schema
  when: powerdns_db.stat.exists is false

- name: Downloading schema for the PowerDNS SQLite database from GitHub
  ansible.builtin.get_url:
    url: "{{ pdns_schema_url }}"
    dest: "{{ pdns_db_path }}/schema.sqlite3.sql"
    mode: 600
  when: powerdns_schema.stat.exists is false

- name: Creating default PowerDNS database from schema
  ansible.builtin.shell: |
    sqlite3 "{{ pdns_db_path }}/pdns.sqlite3" < "{{ pdns_db_path }}/schema.sqlite3.sql"
    chown -R pdns:pdns "{{ pdns_db_path }}"
    exit 0
  when: powerdns_db.stat.exists is false
  register: my_output
  changed_when: my_output.rc != 0

- name: Removing the PowerDNS schema
  ansible.builtin.file:
    path: "{{ pdns_db_path }}/schema.sqlite3.sql"
    state: absent

- name: Configuring PowerDNS
  ansible.builtin.include_tasks: setup_pdns.yaml

- name: Creating PowerDNS records
  ansible.builtin.include_tasks: setup_pdns_records.yaml

- name: Configuring PowerDNS recursor
  ansible.builtin.include_tasks: setup_recursor.yaml
