---
- name: Checking if the PowerDNS database location already exists
  ansible.builtin.stat:
    path: "{{ pdns_db_path }}"
  register: powerdns_dir

- name: Creating path for PowerDNS SQLite database and schema
  ansible.builtin.command: mkdir -p "{{ pdns_db_path }}"
  when: powerdns_dir.stat.exists is false
  register: my_output
  changed_when: my_output.rc != 0

- name: Checking if the PowerDNS schema already exists
  ansible.builtin.stat:
    path: "{{ pdns_db_path }}/schema.sqlite3.sql"
  register: powerdns_schema

- name: Downloading schema for the PowerDNS SQLite database from GitHub
  ansible.builtin.get_url:
    url: "{{ pdns_schema_url }}"
    dest: "{{ pdns_db_path }}/schema.sqlite3.sql"
    mode: 600
  when: powerdns_schema.stat.exists is false

- name: Checking if the PowerDNS schema already exists
  ansible.builtin.stat:
    path: "{{ pdns_db_path }}/pdns.sqlite3"
  register: powerdns_db

- name: Creating default PowerDNS database from schema
  ansible.builtin.shell: |
    sqlite3 "{{ pdns_db_path }}/pdns.sqlite3" < "{{ pdns_db_path }}/schema.sqlite3.sql"
    chown -R pdns:pdns "{{ pdns_db_path }}"
    exit 0
  when: powerdns_db.stat.exists is false
  register: my_output
  changed_when: my_output.rc != 0

- name: Configuring PowerDNS
  ansible.builtin.include_tasks: config_pdns.yaml

- name: Creating PowerDNS records
  ansible.builtin.include_tasks: setup_records.yaml
