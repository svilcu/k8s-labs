---
- name: Creating zone {{ default_domain }}
  ignore_errors: true
  ansible.builtin.command: " pdnsutil create-zone {{ default_domain }}"
  register: pdnsutil_create_zone
  changed_when: pdnsutil_create_zone.rc != 0

- name: Creating in-addr.arpa zone name
  ansible.builtin.shell: |
    set -o pipefail
    echo "{{ default_CIDR }}" |  awk 'BEGIN { FS = "." } ; {print $3"."$2"."$1".in-addr.arpa"}'
  register: in_addr
  changed_when: in_addr.rc != 0

- name: Registering in-addr.arpa as fact
  ansible.builtin.set_fact:
    in_addr_arpa: "{{ in_addr.stdout }}"
    cacheable: true

- name: Creating zone {{ in_addr_arpa }}
  # ignore_errors: true
  ansible.builtin.command: " pdnsutil create-zone {{ in_addr_arpa }}"
  register: pdnsutil_create_zone
  changed_when: pdnsutil_create_zone.rc == 0

- name: Creating NS entry for {{ default_domain }}
  ansible.builtin.command: "pdnsutil add-record {{ default_domain }} @ NS ns1.{{ default_domain }}"
  register: pdnsutil_add_ns
  changed_when: pdnsutil_add_ns.rc == 0

- name: Creating entry for ns1.{{ default_domain }}
  ansible.builtin.command: "pdnsutil add-record {{ default_domain }} ns1 A {{ ansible_facts['bpi_network'] }}.{{ ns1 }}"
  register: pdnsutil_add_ns_a
  changed_when: pdnsutil_add_ns_a.rc == 0

- name: Creating NS entry for {{ in_addr_arpa }}
  ansible.builtin.command: "pdnsutil add-record {{ in_addr_arpa }} @ NS ns1.{{ default_domain }}"
  register: pdnsutil_add_reverse_ns
  changed_when: pdnsutil_add_reverse_ns.rc == 0

- name: Creating A records in {{ default_domain }}
  # ignore_errors: true
  ansible.builtin.command: "pdnsutil add-record {{ default_domain }} {{ item.key }} A {{ ansible_facts['bpi_network'] }}.{{ item.value }}"
  loop: "{{ static_hosts | dict2items }}"
  register: pdnsutil_add_record
  changed_when: pdnsutil_add_record.rc == 0


- name: Creating CNAME records in {{ default_domain }}
  # ignore_errors: true
  ansible.builtin.command: "pdnsutil add-record {{ default_domain }} {{ item.key }} CNAME {{ item.value }}.{{ default_domain }}"
  loop: "{{ cnames | dict2items }}"
  register: pdnsutil_add_cname
  changed_when: pdnsutil_add_cname.rc == 0

- name: Creating PTR records in {{ in_addr_arpa }}
  # ignore_errors: true
  ansible.builtin.command: "pdnsutil add-record {{ item.value }}.{{ ansible_facts['in_addr_arpa'] }} PTR {{ item.key }}.{{ default_domain }}"
  loop: "{{ static_hosts | dict2items }}"
  register: pdnsutil_add_ptr
  changed_when: pdnsutil_add_ptr.rc == 0

- name: Increasing serial on {{ default_domain }}
  ansible.builtin.command: "pdnsutil increase-serial {{ default_domain }}"
  register: pdnsutil_increase_serial
  changed_when: pdnsutil_increase_serial.rc == 0

- name: Increasing serial on {{ in_addr_arpa }}
  ansible.builtin.command: "pdnsutil increase-serial {{ in_addr_arpa }}"
  register: pdnsutil_increase_serial_reverse
  changed_when: pdnsutil_increase_serial_reverse.rc == 0
